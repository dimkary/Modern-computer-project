// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	// Getting inner pins for sel flips
	Not(in=sel[1], out=nselZero);
	Not(in=sel[0], out=nselOne);
	
	to16(in=nselZero, out=nselzero);
	to16(in=nselOne, out=nselone);
	to16(in=sel[1], out=selzero);
	to16(in=sel[0], out=selone);

	// a gate
	And16(a=nselzero, b=nselone, out=flagA);
	
	And16(a=flagA, b=a, out=finalA);
	
	// b gate
	And16(a=nselzero, b=selone, out=flagB);
	
	And16(a=flagB, b=b, out=finalB);	
	
	// c gate
	And16(a=selzero, b=nselone, out=flagC);
	
	And16(a=flagC, b=c, out=finalC);
	
	
	// d gate
	And16(a=selzero, b=selone, out=flagD);

	And16(a=flagD, b=d, out=finalD);
	
	Or16(a=finalA, b=finalB, out=aAndB);
	Or16(a=aAndB, b=finalC, out=aToC);
	Or16(a=aToC, b=finalD, out=out);
	
}